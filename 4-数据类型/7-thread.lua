-- #thread（线程）#

-- 在 Lua 里，最主要的线程是协同程序（coroutine）。
-- 它跟线程（thread）差不多，拥有自己独立的栈、局部变量和指令指针，可以跟其他协同程序共享全局变量和其他大部分东西。

-- 线程跟协程的区别：线程可以同时多个运行，而协程任意时刻只能运行一个，并且处于运行状态的协程只有被挂起（suspend）时才会暂停。 -- [可以结合Python 和 Go中的协程对比异同点，思考底层底层实现方式，还有swoole]


-- 个人目前知道的：
-- python: 也是有协程，跟lua相同，也是同一时刻，也只能有一个协程在运行，状态：有运行，挂起
-- go：则是可以同时有多个协程，并行运行，所以Go从语言层面就天然支持了高并发.

